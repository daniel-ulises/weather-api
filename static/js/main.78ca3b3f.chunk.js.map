{"version":3,"sources":["Components/Search.jsx","Components/Header.jsx","Components/Display.jsx","App.jsx","index.js"],"names":["Search","props","className","onSubmit","submit","type","name","id","placeholder","onChange","getValue","Header","Display","cards","console","log","i","city","list","length","push","currentDay","dt_txt","main","temp","temp_min","temp_max","src","weather","icon","description","feels_like","humidity","generateCards","App","useState","location","setLocation","forecast","setForecast","setCards","useEffect","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","fetch","process","then","res","json","data","e","preventDefault","document","querySelector","value","target","date","Date","getDay","cod","class","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.78ca3b3f.chunk.js","sourcesContent":["import React from 'react'\n\nfunction Search(props) {\n\treturn (\n\t\t<div className=\"search\">\n\t\t\t<form onSubmit={props.submit}>\n\t\t\t\t<input type=\"search\" name=\"search\" id=\"search\" placeholder=\"Input city name\" onChange={props.getValue}/>\n\t\t\t</form>\n\t\t</div>\n\t)\n}\n\nexport default Search\n","import React from 'react'\nimport Search from \"./Search\"\n\nfunction Header(props) {\n\treturn (\n\t<header>\n\t\t<Search submit={props.submit} getValue={props.getValue}/>\n\t</header>\n\t)\n}\n\nexport default Header\n","import React from 'react'\n\nfunction Display(props) {\n\tconst cards = []\n\tconst generateCards = () => {\n\t\tfor(let i = 0; i < props.city.list.length; i += 8) {\n\t\t\tcards.push(\n\t\t\t\t<div className=\"info\">\n\t\t\t\t\t<div className=\"temp-container\">\n\t\t\t\t\t\t<div className=\"title\">\n\t\t\t\t\t\t\t<h1>{props.city.city.name}</h1>\n\t\t\t\t\t\t\t<h4>{(props.currentDay(props.city.list[i].dt_txt))}</h4>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"temp-display\">\n\t\t\t\t\t\t\t<div className=\"main-temp\">\n\t\t\t\t\t\t\t\t<span className=\"temp\">{props.city.list[i].main.temp}째</span>\n\t\t\t\t\t\t\t\t<div className=\"min-max\">\n\t\t\t\t\t\t\t\t\t<span>{props.city.list[i].main.temp_min}째</span>\n\t\t\t\t\t\t\t\t\t<span>{props.city.list[i].main.temp_max}째</span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\t\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"extra-info\">\n\t\t\t\t\t\t\t<img src={`https://openweathermap.org/img/wn/${props.city.list[i].weather[0].icon}@2x.png`}></img>\n\t\t\t\t\t\t\t<span>{props.city.list[i].weather[0].description}</span>\n\t\t\t\t\t\t\t<span>Feels like: {props.city.list[i].main.feels_like}째</span>\n\t\t\t\t\t\t\t<span>Humidity: {props.city.list[i].main.humidity}%</span>\n\t\t\t\t\t\t</div>\t\t\t\t\t\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t)\n\t\t}\n\t\treturn cards\n\t}\n\n\tconsole.log(cards)\n\nreturn (\n\t<div className=\"container\">\n\t\t{generateCards()} \n\t</div>\n\t)\n}\n\nexport default Display\n","import React, {useState, useEffect} from 'react'\nimport Header from \"./Components/Header\"\nimport Display from \"./Components/Display\"\nimport \"./App.css\"\n\nfunction App() {\n\tconst [location, setLocation] = useState()\n\tconst [forecast, setForecast] = useState([])\n\tconst [cards, setCards] = useState()\n\n\tuseEffect(() => {\n\t\tif(navigator.geolocation) {\n\t\t\tnavigator.geolocation.getCurrentPosition(onSuccess)\n\t\t}\n\t\t\n\t\tfunction onSuccess(position) {\n\t\t\tconst {\n\t\t\t\tlatitude,\n\t\t\t\tlongitude\n\t\t\t} = position.coords;\n\t\n\n\t\t   fetch(`https://api.openweathermap.org/data/2.5/forecast?lat=${latitude}&lon=${longitude}&APPID=${process.env.REACT_APP_API_KEY}&units=metric`)\n\t\t   .then(res => res.json())\n\t\t   .then(data => setForecast(data))\t\t\n\t\t}\n\t\t\n\t}, [])\n\n\tconst searchValue = e => {\n\t\tsetLocation(e.target.value)\n\t}\n\n\tconst foreCast = e => {\n\t\te.preventDefault() \n\n\t\tfetch(`https://api.openweathermap.org/data/2.5/forecast?q=${location}&APPID=${process.env.REACT_APP_API_KEY}&units=metric`)\n\t\t.then(res => res.json())\n\t\t.then(data => setForecast(data))\n\n\t\tdocument.querySelector(\"input\").value = \"\"\n\t}\n\n\tconst getDay = date => {\n\t\tswitch (new Date(date).getDay()) {\n\t\t\tcase 0: return \"Sunday\";\t\t\n\t\t\tcase 1:\treturn \"Monday\";\n\t\t\tcase 2:\treturn \"Tuesday\";\n\t\t\tcase 3: return \"Wednesday\";\n\t\t\tcase 4: return \"Thursday\";\n\t\t\tcase 5: return \"Friday\";\n\t\t\tcase 6: return \"Saturday\";\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<Header submit={foreCast} getValue={searchValue}/>\n\t\t\t{forecast.list ? <Display city={forecast} currentDay={getDay} setCards={setCards}/> \n\t\t\t\t\t\t\t: forecast.cod == 404 ? \n\t\t\t\t\t\t\t<div className=\"container\">\n\t\t\t\t\t\t\t\t<div class=\"info loading\">\n\t\t\t\t\t\t\t\t\t<h3>Location does not exist, try a different one!</h3>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t: <div className=\"container\">\n\t\t\t\t\t\t\t\t<div className=\"loading\">\n\t\t\t\t\t\t\t\t\t<h2>Getting your location...</h2>\n\t\t\t\t\t\t\t\t\t<p>If your browser does not have geolocation enabled, proceed by searching for a city</p>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>}\n\t\t</>\n\t)\n}\n\nexport default App\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n"],"sourceRoot":""}